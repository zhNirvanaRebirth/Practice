分治法
	将问题拆分成几个子问题，子问题和原问题相似，只是量级上小一些
	递归的解决每个子问题
	
快速指数
	计算a的n次方
	递归/循环拆分n
	
斐波那契数列
	f(n) = f(n - 1) + f(n - 2)
	可以通过矩阵{{1, 1}, {1, 0}}的n次方求得{{f(n + 1), f(n)}, {f(n), f(n - 1)}}
	而求n次方可以通过快速指数方法，此时时间复杂度为O(lgn)
	
搜索峰值
	数组中没有重复值，但存在多个峰值，返回任意一个峰值的index （第一个和最后一个值为负无穷）
	二分然后分情况（比较前一个值及后一个值与当前值得大小）寻找
	
在未排序数组中找中值（或第k大的值）
	对一个元素m经过一轮快排（找pivot）
	此时该元素m就应该在其应该在的位置（这是可以得到i和j）
	通过j与k的大小关系，可以判断下次该在m的左边找还是右边找
	递归
	
两数组的交集（输出不能有重复）
	方法一：
		将较大数组排序
		将较小数组中的每个元素在排好序的较大数组中进行二分搜索
	
	方法二：
		两个数组排序
		双指针
		
计算数组中逆序对
	当i<j, a[i] > a[j],就是一个逆序对
	使用merge sort，在merge的时候判断有多少逆序对
	