答题技巧：
	明确需求（与面试官交流）
	确定解题思路与步骤
	分析时间复杂度与空间复杂度
	写出程序
	测试用例

找到丢失的数字：
	排序+二分搜索
	排序+线性搜索
	求和+减法
	计数排序
	异或 （A^A = 0, A^0 = A, 支持交换律）

	思考：缺少2个数字，3个数字。。。

找出亚马逊中前K个最经常被搜索的物品
	？？？？？？？？？？？

时间复杂度
	随着输入（n）的增大，操作所需要的时间与n的关系
	存在一个n0，使得n>n0时，存在常数k，使得k*f(n)大于该算法的时间（O(f(n))）

主项定理
	T(n) = aT(n/b) + f(n)
	将一个大问题拆分成b个小问题，需要解决其中的a个小问题，解决每个小问题的时间是f(n)
	比较n的以b为底数的对数（nlogba）与f(n)的大小
		谁大取谁
		大小相同：f(n)*lgn

洗牌问题
	循环，
	比如第一次循环，就从（1-n）随机选取数字k，然后用k与第一个数字交换，
	然后第二次循环，从（1-n）中随机选取数字k，然后用k与第二个数字交换，
	以此类推

	证明：第一次循环，其中的每个数字被选取的概率是1/n
	第二次循环，其中的每个数字是第一次循环没选取到，其概率是(n-1)/n, 然后第二次被选取的概率是1/(n-1),所以每个数字被选取的概率是(n-1)/n * 1/(n-1) = 1/n
	以此类推，所以每个数字每次被选取到每个位置的概率都是1/n

数组
	内存连续
	元素类型相同（每个所需的空间大小相同）
	长度固定
	可以通过索引访问 （O(1)）


计算（寻找）质素
	每次找到一个质数时，删除数组中的该质数的倍数

哥德巴赫猜想（任意大于2的偶数都可以写成两个质数的和）
	找到小于偶数的所有质数，然后使用双指针
	
动态数组
	成员：
		连续的地址空间
		存储相同的数据类型
		length，size
		capacity
	方法：
		create
		judge is empty
		add/append (可能需要double size)
		remove (remove index, remove all)
		length()
		get()
		set()
		insert()
		
	要点：
		设定初始大小（容量）
		
	实现：
		创建一个空的列表

深拷贝与浅拷贝

扫雷游戏
	每个格子的数字表示与其相邻格子中有多少个雷
	在原有格子矩阵外围增加一圈
	
矩阵0变换
	在一个矩阵中，遇到一个位置上的数字是0时，就将该元素对应的行和列都设置为0
	增加两个数组，一个记录行中为0的位置，一个记录列中为0的位置
	
九宫图
	每一行，每一列，对角线，相加的和都相同 （3*3， 5*5）
		固定算法：最后一行中间填1，依次填入右下位置，超出取余，位置被占用填入当前数字上方
		
数独
	判断数独的正确性
		使用int类型，通过二进制与操作判断
		通过一个for循环：
			判断每一行 （i， j）
			判断每一列 （j， i）
			取余判断每个小格子
			
旋转矩阵
	从外到内分层旋转
	
翻转字符串
	双指针
	
找到数组中出现两次的元素（元素的范围是1到n）
	不使用额外空间，时间复杂度是O(n)
	遍历数组，若获取的数字是n，就将第n个位置上的数字设置成该数字的相反数，若后续再来设置时发现数字已经是负数，则该位置数字出现了两次，最终，若某位置对应的数字是正数，则该位置对应的数字没有出现过
	